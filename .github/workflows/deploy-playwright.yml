name: Deploy Playwright to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the latest code
    - name: Checkout code
      uses: actions/checkout@v3 # update

    # Step 2: Configure AWS credentials
    - name: Configure AWS credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set region us-east-2

    # Step 3: Log in to Amazon ECR
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: private

    # Step 4: Build and push the Docker image to Amazon ECR
    - name: Build and push Docker image
      env:
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        AWS_REGION: us-east-2
      run: |
        IMAGE_NAME=playwright-tests
        IMAGE_TAG=$(date +%s)

        docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:$IMAGE_TAG .
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:$IMAGE_TAG

        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    # Step 5: Update CronJob on EKS
    - name: Update EKS CronJob
      env:
        AWS_REGION: us-east-2
        EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        IMAGE_TAG: ${{ env.IMAGE_TAG }}
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

        kubectl set image cronjob/playwright-tests-scheduler \
          playwright=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/playwright-tests:$IMAGE_TAG